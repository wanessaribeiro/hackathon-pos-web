{"version":3,"file":"prefetch.esm.js","sources":["../src/prefetch.ts"],"sourcesContent":["var _a, _b;\nvar _c;\nimport { __awaiter } from \"tslib\";\nimport { getRemoteEntry, getRemoteInfo, } from '@module-federation/runtime';\nimport { loadScript, } from '@module-federation/sdk';\nimport { getPrefetchId, compatGetPrefetchId } from './common/runtime-utils';\n(_a = globalThis.__FEDERATION__) !== null && _a !== void 0 ? _a : (globalThis.__FEDERATION__ = {});\n(_b = (_c = globalThis.__FEDERATION__).__PREFETCH__) !== null && _b !== void 0 ? _b : (_c.__PREFETCH__ = {\n    entryLoading: {},\n    instance: new Map(),\n    __PREFETCH_EXPORTS__: {},\n});\nexport class MFDataPrefetch {\n    constructor(options) {\n        this.prefetchMemory = new Map();\n        this.recordOutdate = {};\n        this._exports = {};\n        this._options = options;\n        this.global.instance.set(options.name, this);\n    }\n    get global() {\n        return globalThis.__FEDERATION__\n            .__PREFETCH__;\n    }\n    static getInstance(id) {\n        return globalThis.__FEDERATION__.__PREFETCH__.instance.get(id);\n    }\n    loadEntry(entry) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { name, remoteSnapshot, remote, origin } = this._options;\n            if (entry) {\n                const { buildVersion, globalName } = remoteSnapshot;\n                const uniqueKey = globalName || `${name}:${buildVersion}`;\n                if (!this.global.entryLoading[uniqueKey]) {\n                    this.global.entryLoading[uniqueKey] = loadScript(entry, {});\n                }\n                return this.global.entryLoading[uniqueKey];\n            }\n            else {\n                const remoteInfo = getRemoteInfo(remote);\n                const module = origin.moduleCache.get(remoteInfo.name);\n                return getRemoteEntry({\n                    origin: origin,\n                    remoteInfo,\n                    remoteEntryExports: module ? module.remoteEntryExports : undefined,\n                });\n            }\n        });\n    }\n    getProjectExports() {\n        var _a;\n        if (Object.keys(this._exports).length > 0) {\n            return this._exports;\n        }\n        const { name } = this._options;\n        const exportsPromiseFn = (_a = globalThis.__FEDERATION__.__PREFETCH__.__PREFETCH_EXPORTS__) === null || _a === void 0 ? void 0 : _a[name];\n        const exportsPromise = typeof exportsPromiseFn === 'function'\n            ? exportsPromiseFn()\n            : exportsPromiseFn;\n        const resolve = exportsPromise.then((exports = {}) => {\n            const memory = {};\n            Object.keys(exports).forEach((key) => {\n                memory[key] = {};\n                const exportVal = exports[key];\n                Object.keys(exportVal).reduce((memo, current) => {\n                    if (current.toLocaleLowerCase().endsWith('prefetch') ||\n                        current.toLocaleLowerCase() === 'default') {\n                        memo[current] = exportVal[current];\n                    }\n                    return memo;\n                }, memory[key]);\n            });\n            this.memorizeExports(memory);\n        });\n        return resolve;\n    }\n    memorizeExports(exports) {\n        this._exports = exports;\n    }\n    getExposeExports(id) {\n        const prefetchId = getPrefetchId(id);\n        const compatId = compatGetPrefetchId(id);\n        const prefetchExports = this._exports[prefetchId] || this._exports[compatId];\n        return prefetchExports || {};\n    }\n    prefetch(prefetchOptions) {\n        const { id, functionId = 'default', refetchParams } = prefetchOptions;\n        let prefetchResult;\n        const prefetchId = getPrefetchId(id);\n        const compatId = compatGetPrefetchId(id);\n        const memorizeId = id + functionId;\n        const memory = this.prefetchMemory.get(memorizeId);\n        if (!this.checkOutdate(prefetchOptions) && memory) {\n            return memory;\n        }\n        const prefetchExports = this._exports[prefetchId] || this._exports[compatId];\n        if (!prefetchExports) {\n            return;\n        }\n        const executePrefetch = prefetchExports[functionId];\n        if (typeof executePrefetch === 'function') {\n            if (refetchParams) {\n                prefetchResult = executePrefetch(refetchParams);\n            }\n            else {\n                prefetchResult = executePrefetch();\n            }\n        }\n        else {\n            throw new Error(`[Module Federation Data Prefetch]: No prefetch function called ${functionId} export in prefetch file`);\n        }\n        this.memorize(memorizeId, prefetchResult);\n        return prefetchResult;\n    }\n    memorize(id, value) {\n        this.prefetchMemory.set(id, value);\n    }\n    markOutdate(markOptions, isOutdate) {\n        const { id, functionId = 'default' } = markOptions;\n        if (!this.recordOutdate[id]) {\n            this.recordOutdate[id] = {};\n        }\n        this.recordOutdate[id][functionId] = isOutdate;\n    }\n    checkOutdate(outdateOptions) {\n        const { id, functionId = 'default', cacheStrategy } = outdateOptions;\n        if (typeof cacheStrategy === 'function') {\n            return cacheStrategy();\n        }\n        if (!this.recordOutdate[id]) {\n            this.recordOutdate[id] = {};\n        }\n        if (this.recordOutdate[id][functionId]) {\n            this.markOutdate({\n                id,\n                functionId,\n            }, false);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}\n"],"names":["_a","_b","_c","globalThis","__FEDERATION__","__PREFETCH__","entryLoading","instance","Map","__PREFETCH_EXPORTS__","MFDataPrefetch","global","getInstance","id","get","loadEntry","entry","__awaiter","name","remoteSnapshot","remote","origin","_options","buildVersion","globalName","uniqueKey","loadScript","remoteInfo","getRemoteInfo","module","moduleCache","getRemoteEntry","remoteEntryExports","undefined","getProjectExports","Object","keys","_exports","length","exportsPromiseFn","exportsPromise","resolve","then","exports","memory","forEach","key","exportVal","reduce","memo","current","toLocaleLowerCase","endsWith","memorizeExports","getExposeExports","prefetchId","getPrefetchId","compatId","compatGetPrefetchId","prefetchExports","prefetch","prefetchOptions","functionId","refetchParams","prefetchResult","memorizeId","prefetchMemory","checkOutdate","executePrefetch","Error","memorize","value","set","markOutdate","markOptions","isOutdate","recordOutdate","outdateOptions","cacheStrategy","constructor","options"],"mappings":"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"}