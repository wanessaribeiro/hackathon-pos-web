{"version":3,"file":"babel.cjs.cjs","sources":["../src/cli/babel.ts"],"sourcesContent":["import path from 'path';\nconst attribute = 'id';\nconst hookId = 'usePrefetch';\nconst importPackage = '@module-federation/data-prefetch/react';\nexport default (babel, options) => {\n    const t = babel.types;\n    let shouldHandle = false;\n    let scope = '';\n    const { name, exposes } = options;\n    if (!exposes) {\n        return {};\n    }\n    const exposesKey = Object.keys(exposes);\n    const processedExposes = exposesKey.map((expose) => ({\n        key: expose.replace('.', ''),\n        value: path.resolve(typeof exposes[expose] === 'string'\n            ?\n                exposes[expose]\n            :\n                exposes[expose].import),\n    }));\n    return {\n        visitor: {\n            ImportDeclaration(nodePath, state) {\n                const source = nodePath.node.source.value;\n                const { specifiers } = nodePath.node;\n                const { filename } = state.file.opts;\n                if (source === importPackage) {\n                    shouldHandle = specifiers.some((specifier) => specifier.imported &&\n                        specifier.imported.name === hookId &&\n                        processedExposes.find((expose) => expose.value === filename && (scope = expose.key)));\n                }\n            },\n            CallExpression(nodePath) {\n                if (shouldHandle &&\n                    t.isIdentifier(nodePath.node.callee, { name: hookId }) &&\n                    nodePath.node.arguments.length > 0) {\n                    const objectExpression = nodePath.node.arguments[0];\n                    if (objectExpression &&\n                        t.isObjectExpression(objectExpression) &&\n                        !objectExpression.properties.find((p) => p.key.name === attribute)) {\n                        objectExpression.properties.push(t.objectProperty(t.identifier(attribute), t.stringLiteral(name + scope)));\n                    }\n                }\n            },\n        },\n    };\n};\n"],"names":["attribute","hookId","importPackage","babel","options","t","types","shouldHandle","scope","name","exposes","exposesKey","Object","keys","processedExposes","map","expose","key","replace","value","path","resolve","import","visitor","ImportDeclaration","nodePath","state","source","node","specifiers","filename","file","opts","some","specifier","imported","find","CallExpression","isIdentifier","callee","arguments","length","objectExpression","isObjectExpression","properties","p","push","objectProperty","identifier","stringLiteral"],"mappings":";;;;AACA,MAAMA,SAAY,GAAA,IAAA;AAClB,MAAMC,MAAS,GAAA,aAAA;AACf,MAAMC,aAAgB,GAAA,wCAAA;AACtB,YAAe,CAAA,CAACC,KAAOC,EAAAA,OAAAA,GAAAA;IACnB,MAAMC,CAAAA,GAAIF,MAAMG,KAAK;AACrB,IAAA,IAAIC,YAAe,GAAA,KAAA;AACnB,IAAA,IAAIC,KAAQ,GAAA,EAAA;AACZ,IAAA,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAE,GAAGN,OAAAA;AAC1B,IAAA,IAAI,CAACM,OAAS,EAAA;AACV,QAAA,OAAO,EAAC;AACZ;IACA,MAAMC,UAAAA,GAAaC,MAAOC,CAAAA,IAAI,CAACH,OAAAA,CAAAA;AAC/B,IAAA,MAAMI,mBAAmBH,UAAWI,CAAAA,GAAG,CAAC,CAACC,UAAY;YACjDC,GAAKD,EAAAA,MAAAA,CAAOE,OAAO,CAAC,GAAK,EAAA,EAAA,CAAA;AACzBC,YAAAA,KAAAA,EAAOC,KAAKC,OAAO,CAAC,OAAOX,OAAO,CAACM,MAAO,CAAA,KAAK,QAEvCN,GAAAA,OAAO,CAACM,MAAO,CAAA,GAEfN,OAAO,CAACM,MAAAA,CAAO,CAACM,MAAM;SAClC,CAAA,CAAA;IACA,OAAO;QACHC,OAAS,EAAA;YACLC,iBAAkBC,CAAAA,CAAAA,QAAQ,EAAEC,KAAK,EAAA;AAC7B,gBAAA,MAAMC,SAASF,QAASG,CAAAA,IAAI,CAACD,MAAM,CAACR,KAAK;AACzC,gBAAA,MAAM,EAAEU,UAAU,EAAE,GAAGJ,SAASG,IAAI;AACpC,gBAAA,MAAM,EAAEE,QAAQ,EAAE,GAAGJ,KAAMK,CAAAA,IAAI,CAACC,IAAI;AACpC,gBAAA,IAAIL,WAAWzB,aAAe,EAAA;oBAC1BK,YAAesB,GAAAA,UAAAA,CAAWI,IAAI,CAAC,CAACC,SAAAA,GAAcA,SAAUC,CAAAA,QAAQ,IAC5DD,SAAAA,CAAUC,QAAQ,CAAC1B,IAAI,KAAKR,MAC5Ba,IAAAA,gBAAAA,CAAiBsB,IAAI,CAAC,CAACpB,MAAAA,GAAWA,MAAOG,CAAAA,KAAK,KAAKW,QAAAA,KAAatB,KAAAA,GAAQQ,MAAOC,CAAAA,GAAG,CAAD,CAAA,CAAA;AACzF;AACJ,aAAA;AACAoB,YAAAA,cAAAA,CAAAA,CAAeZ,QAAQ,EAAA;gBACnB,IAAIlB,YAAAA,IACAF,EAAEiC,YAAY,CAACb,SAASG,IAAI,CAACW,MAAM,EAAE;oBAAE9B,IAAMR,EAAAA;AAAO,iBAAA,CAAA,IACpDwB,SAASG,IAAI,CAACY,SAAS,CAACC,MAAM,GAAG,CAAG,EAAA;AACpC,oBAAA,MAAMC,mBAAmBjB,QAASG,CAAAA,IAAI,CAACY,SAAS,CAAC,CAAE,CAAA;AACnD,oBAAA,IAAIE,oBACArC,CAAEsC,CAAAA,kBAAkB,CAACD,gBACrB,CAAA,IAAA,CAACA,iBAAiBE,UAAU,CAACR,IAAI,CAAC,CAACS,CAAMA,GAAAA,CAAAA,CAAE5B,GAAG,CAACR,IAAI,KAAKT,SAAY,CAAA,EAAA;AACpE0C,wBAAAA,gBAAAA,CAAiBE,UAAU,CAACE,IAAI,CAACzC,EAAE0C,cAAc,CAAC1C,CAAE2C,CAAAA,UAAU,CAAChD,SAAAA,CAAAA,EAAYK,CAAE4C,CAAAA,aAAa,CAACxC,IAAOD,GAAAA,KAAAA,CAAAA,CAAAA,CAAAA;AACtG;AACJ;AACJ;AACJ;AACJ,KAAA;AACJ,CAAA;;;;"}