{"version":3,"file":"cli.esm.js","sources":["../src/common/constant.ts","../src/common/node-utils.ts","../src/cli/index.ts"],"sourcesContent":["export const TEMP_DIR = '.mf';\n","import path from 'path';\nimport fs from 'fs-extra';\nexport const fileExistsWithCaseSync = (filepath) => {\n    const dir = path.dirname(filepath);\n    if (filepath === '/' || filepath === '.') {\n        return true;\n    }\n    const filenames = fs.readdirSync(dir);\n    if (filenames.indexOf(path.basename(filepath)) === -1) {\n        return false;\n    }\n    return fileExistsWithCaseSync(dir);\n};\nexport const fixPrefetchPath = (exposePath) => {\n    const pathExt = ['.js', '.ts'];\n    const extReg = /\\.(ts|js|tsx|jsx)$/;\n    if (extReg.test(exposePath)) {\n        return pathExt.map((ext) => exposePath.replace(extReg, `.prefetch${ext}`));\n    }\n    else {\n        return pathExt.map((ext) => exposePath + `.prefetch${ext}`);\n    }\n};\n","import path from 'path';\nimport fs from 'fs-extra';\nimport { encodeName, MFPrefetchCommon, } from '@module-federation/sdk';\nimport { normalizeWebpackPath } from '@module-federation/sdk/normalize-webpack-path';\nimport { TEMP_DIR } from '../common/constant';\nimport { fileExistsWithCaseSync, fixPrefetchPath } from '../common/node-utils';\nimport { getPrefetchId } from '../common/runtime-utils';\nimport { SHARED_STRATEGY } from '../constant';\nconst { RuntimeGlobals, Template } = require(normalizeWebpackPath('webpack'));\nexport function getFederationGlobalScope(runtimeGlobals) {\n    return `${runtimeGlobals.require || '__webpack_require__'}.federation`;\n}\nexport class PrefetchPlugin {\n    constructor(options) {\n        this.options = options;\n        this._reWriteExports = '';\n    }\n    apply(compiler) {\n        var _a;\n        const { name, exposes } = this.options;\n        if (!exposes) {\n            return;\n        }\n        if (!compiler.options.context) {\n            throw new Error('compiler.options.context is not defined');\n        }\n        const { runtimePlugins } = this.options;\n        if (!Array.isArray(runtimePlugins)) {\n            this.options.runtimePlugins = [];\n        }\n        const runtimePath = path.resolve(__dirname, './plugin.esm.js');\n        if (!((_a = this.options.runtimePlugins) === null || _a === void 0 ? void 0 : _a.includes(runtimePath))) {\n            this.options.runtimePlugins.push(runtimePath);\n        }\n        if (this.options.shareStrategy !== SHARED_STRATEGY) {\n            this.options.shareStrategy = SHARED_STRATEGY;\n            console.warn(`[Module Federation Data Prefetch]: Your shared strategy is set to '${SHARED_STRATEGY}', this is a necessary condition for data prefetch`);\n        }\n        const encodedName = encodeName(name);\n        const asyncEntryPath = path.resolve(compiler.options.context, `node_modules/${TEMP_DIR}/${encodedName}/bootstrap.js`);\n        if (fs.existsSync(asyncEntryPath)) {\n            fs.unlinkSync(asyncEntryPath);\n        }\n        if (!this.options.dataPrefetch) {\n            return;\n        }\n        const prefetchs = [];\n        const exposeAlias = Object.keys(exposes);\n        exposeAlias.forEach((alias) => {\n            let exposePath;\n            const exposeValue = exposes[alias];\n            if (typeof exposeValue === 'string') {\n                exposePath = exposeValue;\n            }\n            else {\n                exposePath = exposeValue.import[0];\n            }\n            const targetPaths = fixPrefetchPath(exposePath);\n            for (const pathItem of targetPaths) {\n                const absolutePath = path.resolve(compiler.options.context, pathItem);\n                if (fileExistsWithCaseSync(absolutePath)) {\n                    prefetchs.push(pathItem);\n                    const absoluteAlias = alias.replace('.', '');\n                    this._reWriteExports += `export * as ${getPrefetchId(`${name}${absoluteAlias}`)} from '${absolutePath}';\\n`;\n                    break;\n                }\n            }\n        });\n        if (!this._reWriteExports) {\n            return;\n        }\n        const tempDirRealPath = path.resolve(compiler.options.context, 'node_modules', TEMP_DIR);\n        if (!fs.existsSync(tempDirRealPath)) {\n            fs.mkdirSync(tempDirRealPath);\n        }\n        if (!fs.existsSync(`${tempDirRealPath}/${encodedName}`)) {\n            fs.mkdirSync(`${tempDirRealPath}/${encodedName}`);\n        }\n        fs.writeFileSync(asyncEntryPath, this._reWriteExports);\n        new compiler.webpack.DefinePlugin({\n            FederationDataPrefetch: JSON.stringify(asyncEntryPath),\n        }).apply(compiler);\n    }\n    static addRuntime(compiler, options) {\n        const encodedName = encodeName(options.name);\n        if (!compiler.options.context) {\n            throw new Error('compiler.options.context is not defined');\n        }\n        const prefetchEntry = path.resolve(compiler.options.context, `node_modules/.mf/${encodedName}/bootstrap.js`);\n        const federationGlobal = getFederationGlobalScope(RuntimeGlobals || {});\n        return Template.asString([\n            fs.existsSync(prefetchEntry)\n                ? Template.indent([\n                    'function injectPrefetch() {',\n                    Template.indent([\n                        `globalThis.__FEDERATION__ = globalThis.__FEDERATION__ || {};`,\n                        `globalThis.__FEDERATION__['${MFPrefetchCommon.globalKey}'] = globalThis.__FEDERATION__['${MFPrefetchCommon.globalKey}'] || {`,\n                        `entryLoading: {},`,\n                        `instance: new Map(),`,\n                        `__PREFETCH_EXPORTS__: {},`,\n                        `};`,\n                        `globalThis.__FEDERATION__['${MFPrefetchCommon.globalKey}']['${MFPrefetchCommon.exportsKey}'] = globalThis.__FEDERATION__['${MFPrefetchCommon.globalKey}']['${MFPrefetchCommon.exportsKey}'] || {};`,\n                        `globalThis.__FEDERATION__['${MFPrefetchCommon.globalKey}']['${MFPrefetchCommon.exportsKey}']['${options.name}'] = function(){ return import('${prefetchEntry}');}`,\n                    ]),\n                    '}',\n                    `${federationGlobal}.prefetch = injectPrefetch`,\n                ])\n                : '',\n            Template.indent([\n                `if(!${federationGlobal}.isMFRemote && ${federationGlobal}.prefetch){`,\n                `${federationGlobal}.prefetch()`,\n                '}',\n            ]),\n        ]);\n    }\n    static setRemoteIdentifier() {\n        const federationGlobal = getFederationGlobalScope(RuntimeGlobals || {});\n        return Template.indent([`${federationGlobal}.isMFRemote = true;`]);\n    }\n    static removeRemoteIdentifier() {\n        const federationGlobal = getFederationGlobalScope(RuntimeGlobals || {});\n        return Template.indent([`${federationGlobal}.isMFRemote = false;`]);\n    }\n}\n"],"names":["TEMP_DIR","fileExistsWithCaseSync","filepath","dir","path","dirname","filenames","fs","readdirSync","indexOf","basename","fixPrefetchPath","exposePath","pathExt","extReg","test","map","ext","replace","RuntimeGlobals","Template","require","normalizeWebpackPath","getFederationGlobalScope","runtimeGlobals","PrefetchPlugin","apply","compiler","_a","name","exposes","options","context","Error","runtimePlugins","Array","isArray","runtimePath","resolve","__dirname","includes","push","shareStrategy","SHARED_STRATEGY","console","warn","encodedName","encodeName","asyncEntryPath","existsSync","unlinkSync","dataPrefetch","exposeAlias","Object","keys","forEach","alias","exposeValue","import","targetPaths","pathItem","absolutePath","absoluteAlias","_reWriteExports","getPrefetchId","tempDirRealPath","mkdirSync","writeFileSync","webpack","DefinePlugin","FederationDataPrefetch","JSON","stringify","addRuntime","prefetchEntry","federationGlobal","asString","indent","MFPrefetchCommon","globalKey","exportsKey","setRemoteIdentifier","removeRemoteIdentifier","constructor"],"mappings":"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"}