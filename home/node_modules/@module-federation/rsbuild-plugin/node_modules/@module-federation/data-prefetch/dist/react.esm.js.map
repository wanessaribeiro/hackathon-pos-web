{"version":3,"file":"react.esm.js","sources":["../src/react/utils.ts","../src/react/hooks.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nexport const useFirstMounted = () => {\n    const ref = useRef(true);\n    useEffect(() => {\n        ref.current = false;\n    }, []);\n    return ref.current;\n};\n","import { useEffect, useState } from 'react';\nimport logger from '../logger';\nimport { MFDataPrefetch } from '../prefetch';\nimport { prefetch } from '../universal';\nimport { getScope } from '../common/runtime-utils';\nimport { useFirstMounted } from './utils';\nexport const usePrefetch = (options) => {\n    const isFirstMounted = useFirstMounted();\n    if (isFirstMounted) {\n        const startTiming = performance.now();\n        logger.info(`2. Start Get Prefetch Data: ${options.id} - ${options.functionId || 'default'} - ${startTiming}`);\n    }\n    const { id, functionId, deferId } = options;\n    const prefetchInfo = {\n        id,\n        functionId,\n    };\n    const mfScope = getScope();\n    let state;\n    const prefetchResult = prefetch(options);\n    if (deferId) {\n        if (prefetchResult instanceof Promise) {\n            state = prefetchResult.then((deferredData) => deferredData.data[deferId]);\n        }\n        else {\n            state = prefetchResult.data[deferId];\n        }\n    }\n    else {\n        state = prefetchResult;\n    }\n    const [prefetchState, setPrefetchState] = useState(state);\n    const prefetchInstance = MFDataPrefetch.getInstance(mfScope);\n    useEffect(() => {\n        const useEffectTiming = performance.now();\n        logger.info(`3. Start Execute UseEffect: ${options.id} - ${options.functionId || 'default'} - ${useEffectTiming}`);\n        return () => {\n            prefetchInstance === null || prefetchInstance === void 0 ? void 0 : prefetchInstance.markOutdate(prefetchInfo, true);\n        };\n    }, []);\n    const refreshExecutor = (refetchParams) => {\n        const refetchOptions = Object.assign({}, options);\n        if (refetchParams) {\n            refetchOptions.refetchParams = refetchParams;\n        }\n        prefetchInstance === null || prefetchInstance === void 0 ? void 0 : prefetchInstance.markOutdate(prefetchInfo, true);\n        const newVal = prefetch(refetchOptions);\n        let newState;\n        if (deferId) {\n            if (newVal instanceof Promise) {\n                newState = newVal.then((deferredData) => deferredData.data[deferId]);\n            }\n            else {\n                newState = newVal.data[deferId];\n            }\n        }\n        else {\n            newState = newVal;\n        }\n        setPrefetchState(newState);\n    };\n    return [prefetchState, refreshExecutor];\n};\n"],"names":["useFirstMounted","ref","useRef","useEffect","current","usePrefetch","options","isFirstMounted","startTiming","performance","now","logger","info","id","functionId","deferId","prefetchInfo","mfScope","getScope","state","prefetchResult","prefetch","Promise","then","deferredData","data","prefetchState","setPrefetchState","useState","prefetchInstance","MFDataPrefetch","getInstance","useEffectTiming","markOutdate","refreshExecutor","refetchParams","refetchOptions","Object","assign","newVal","newState"],"mappings":"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"}